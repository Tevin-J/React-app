{"version":3,"sources":["assets/images/defaultUserPhoto.svg","Redux/dialogsReducer.js","components/Common/Preloader/Preloader.module.css","assets/images/preloader.svg","components/NavBar/Navbar.module.css","components/Common/FormsControls/FormsControls.js","serviceWorker.js","components/NavBar/Sidebar/SidebarFriends/Friend/Friend.jsx","components/NavBar/Sidebar/SidebarFriends/SidebarFriends.jsx","components/NavBar/Sidebar/SidebarFriends/SidebarFriendsContainer.jsx","components/NavBar/Navbar.jsx","components/Content/Feed/Feed.jsx","components/Content/Music/Music.jsx","components/Content/Settings/Settings.jsx","utilits/objectHelpers.js","Redux/usersReducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","Redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","Redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","Redux/appReducer.js","Redux/sidebarReducer.js","Redux/reduxStore.js","hoc/withSuspense.jsx","App.js","index.js","components/Common/Preloader/Preloader.js","components/Common/FormsControls/FormsControls.module.css","components/NavBar/Sidebar/SidebarFriends/SidebarFriends.module.css","utilits/validators/validators.js","components/NavBar/Sidebar/SidebarFriends/Friend/Friend.module.css","api/api.js","components/Common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/Header/Header.module.css","Redux/profileReducer.js"],"names":["module","exports","initialState","dialogsData","id","name","avatar","messagesData","message","from","sendMessageActionCreator","newMessageText","type","dialogsReducer","state","action","text","FormControl","input","meta","touched","error","children","hasError","className","style","formControl","Textarea","props","restProps","child","Input","createField","placeholder","component","validators","validate","Boolean","window","location","hostname","match","Friend","sidebarFriend","ava","SidebarFriends","friends","sidebarFriendsAvatars","map","friend","src","sidebarFriendsNames","item","sidebar","sidebarFriends","title","SidebarFriendsContainer","connect","Navbar","nav","to","activeClassName","activeLink","Feed","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","i","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","filter","Paginator","onPageChanged","totalItemsCount","portionSize","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","selectedPage","e","User","user","follow","unfollow","userPhoto","photos","small","defaultUserPhoto","disabled","some","status","Users","key","getUsers","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","onReducePagesList","onIncreasePagesList","this","Preloader","React","Component","compose","page","usersAPI","response","totalCount","followUser","bind","unfollowUser","Header","header","loginBlock","isAuth","login","logout","SET_AUTH_USER_DATA","email","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","authAPI","authMe","getCaptchaUrl","securityAPI","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummaryError","password","rememberMe","captcha","messages","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","withSuspense","Suspense","fallback","ProfileContainer","lazy","DialogsContainer","App","catchAllUnhandledErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","exact","path","render","AppContainer","promise","Promise","all","then","withRouter","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","value","maxLengthCreator","maxLength","instance","axios","baseURL","withCredentials","headers","get","post","delete","profileAPI","getProfile","getStatus","updateStatus","put","savePhoto","photoFile","FormData","append","saveProfile","profile","postData","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","wrongNetwork","slice","indexOf","toLocaleLowerCase","contacts","reject","newPost","postId"],"mappings":"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","file":"static/js/main.a0989b02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultUserPhoto.7a21cbe9.svg\";","const SEND_MESSAGE = 'SEND-MESSAGE'; //для удобства присвоили тип actiona переменной, чтоб обращаться уже с ней и не\r\n// допускать ошибок при написании типа как строки\r\n\r\nlet initialState = {\r\n        dialogsData: [\r\n            {\r\n                id: 1,\r\n                name: 'Misha',\r\n                avatar: \"https://thumbs.dreamstime.com/b/desenhos-animados-bonitos-da-cara-do-menino-110656357.jpg\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Valera',\r\n                avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRBnXsITUj-e_i32TpFr0CQNW0YM9n4dbUHo7r00ynUKW15hBtF&s\"\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Egor',\r\n                avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRQF8Z879_maOZBlmNXL_guXrL8Muk8JAGj6ugglvkN70ppycF5&s\"\r\n            }\r\n        ],\r\n        messagesData: [\r\n            {id: 1, message: 'Hello!', from: 1},\r\n            {id: 2, message: 'How are you?', from: 1},\r\n            {id: 3, message: 'London is the capital of Great Britain', from: 0}\r\n        ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {  //reducer получает свою ветку state (для первого отображения\r\n    // страницы нужно отобразить initial state) и action. если тип actionа есть в данном reducere, то он изменит state\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let text = action.newMessageText;\r\n            return ({\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 4, message: text, from: 0}]\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const sendMessageActionCreator = (newMessageText) => ({type: SEND_MESSAGE, newMessageText}); //actionCreatorы создают actionы. action это\r\n// объект у которого обязательно есть свойство type, а также другие св-ва по необходимости\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1DZCC\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.7ba29cf2.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1-hSc\",\"item\":\"Navbar_item__1B1D7\",\"activeLink\":\"Navbar_activeLink__3cdmL\",\"sidebar\":\"Navbar_sidebar__1Eg3Y\"};","import React from \"react\";\r\nimport style from './FormsControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={style.formControl + ' ' + (hasError ? style.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea = (props) => { /*rest-оператор*/\r\n    const {input, meta, child, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps}/>\r\n        </FormControl>\r\n    )\r\n}\r\n/*универсальная функция для создания Field'ов в redux-form*/\r\nexport const createField = (placeholder, name, component, validators, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component}\r\n               validate={validators} {...props}/>\r\n        {text}\r\n    </div>\r\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport style from './Friend.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Friend = (props) => {\r\n\r\n    return (\r\n        <div className={style.sidebarFriend}>\r\n            <div className={style.ava}>\r\n                {props.avatar}\r\n            </div>\r\n            <div className={style.name}>\r\n                {props.name}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;\r\n\r\nFriend.propTypes = {\r\n    name: PropTypes.string,\r\n    avatar: PropTypes.object\r\n}","import React from 'react';\r\nimport style from './SidebarFriends.module.css';\r\nimport Friend from \"./Friend/Friend\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nconst SidebarFriends = (props) => {\r\n\r\n    let state = props.friends;\r\n\r\n    let sidebarFriendsAvatars = state.friends.map(friend => <Friend avatar={<img src={friend.avatar}/>}/>);\r\n    let sidebarFriendsNames = state.friends.map(friend => <Friend name={friend.name}/>)\r\n\r\n    return (\r\n\r\n        <div className={style.item}>\r\n            <div className={style.sidebar}>\r\n                <div className={style.sidebarFriends}>\r\n                    <div className={style.title}>\r\n                        My friends\r\n                    </div>\r\n                    {sidebarFriendsAvatars}\r\n                    {sidebarFriendsNames}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SidebarFriends;\r\n\r\nSidebarFriends.propTypes = {\r\n    friends: PropTypes.array,\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string\r\n}","import React from 'react';\r\nimport SidebarFriends from \"./SidebarFriends\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            friends: state.sidebar\r\n        }\r\n    )\r\n}\r\nlet mapDispatchToProps = () => {\r\n    return (\r\n        {\r\n\r\n        }\r\n    )\r\n}\r\n\r\nconst SidebarFriendsContainer = connect(mapStateToProps, mapDispatchToProps)(SidebarFriends)\r\nexport default SidebarFriendsContainer;\r\n","import React from 'react';\r\nimport style from \"./Navbar.module.css\"; /*модули css позволяют использовать в названии классов самые простые названия,\r\nреакт сам преобразует имена классов в уникальные*/\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SidebarFriends from \"./Sidebar/SidebarFriends/SidebarFriends\";\r\nimport SidebarFriendsContainer from \"./Sidebar/SidebarFriends/SidebarFriendsContainer\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}> {/*класс с основным атрибутом item по умолчанию сразу попадет в объект*/}\r\n                <NavLink to=\"/profile\" activeClassName={style.activeLink}>My profile</NavLink> {/*А дополнительный\r\n                атрибут activeLink только тогда, когда будет необходимо. Основной атрибут в className, а дополнительный\r\n                в activeClassName, так как className для этого объекта уже существует*/}\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink> {/*NavLink вместо <a>,\r\n                чтоб страница при переходе по ссылкам не перезагружалась, а просто отрисовывала необходимые компоненты.\r\n                Вместо href в NavLink используется атрибут to*/}\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/feed\" activeClassName={style.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/users\" activeClassName={style.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/music\" activeClassName={style.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/settings\" activeClassName={style.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <SidebarFriendsContainer/>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import React from 'react';\r\nimport styles from './Feed.module.css';\r\n\r\nconst Feed = (props) => {\r\n    return (\r\n      <div>\r\n          News feed\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport style from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            My playlist\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps}\r\n        }\r\n        return i;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utilits/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE_IS_FOLLOWING_IN_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return ({\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            })\r\n        case UNFOLLOW:\r\n            return ({\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            })\r\n        case SET_USERS:\r\n            return ({\r\n                ...state, users: action.users\r\n            })\r\n        case SET_CURRENT_PAGE:\r\n            return ({\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            })\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return ({\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            })\r\n        case TOGGLE_IS_FETCHING:\r\n            return ({\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            })\r\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\r\n            return ({\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n/*универсальная функция для подписки-отписки, чтоб не дублировать код*/\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId))\r\n}\r\n\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page))\r\n    let response = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\nexport const follow = (userId) => (dispatch) => {\r\n    let actionCreator = followSuccess\r\n    let apiMethod = usersAPI.followUser.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n}\r\nexport const unfollow = (userId) => (dispatch) => {\r\n    let actionCreator = unfollowSuccess\r\n    let apiMethod = usersAPI.unfollowUser.bind(usersAPI)\r\n    followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport style from './Paginator.module.css'\r\n\r\n\r\nconst Paginator = ({currentPage, onPageChanged, totalItemsCount, pageSize, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber -1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n    return (\r\n        <div className={style.pages}>\r\n            {portionNumber > 1 && <span onClick={() => {setPortionNumber(portionNumber - 1)}}>-</span>}\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                return <span className={currentPage === p && style.selectedPage}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p)\r\n                             }}>{p}</span>\r\n            })}\r\n            {portionCount > portionNumber && <span onClick={() => {setPortionNumber(portionNumber + 1)}}>+</span>}\r\n        </div>\r\n    )\r\n}\r\nexport default Paginator","import React from 'react';\r\nimport style from './Users.module.css'\r\nimport defaultUserPhoto from '../../assets/images/defaultUserPhoto.svg'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div className={style.userPhoto}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small ? user.photos.small : defaultUserPhoto}\r\n                             className={style.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ?\r\n                        <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            unfollow(user.id)\r\n                        }}>Unfollow</button>\r\n                        :\r\n                        <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                {/*<span>\r\n                    <div>{user.location.country}</div>\r\n                    <div>{user.location.city}</div>\r\n                </span>*/}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React from 'react';\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nconst Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n            {users.map(user => <User user={user} followingInProgress={props.followingInProgress} follow={props.follow}\r\n                                     unfollow={props.unfollow} key={user.id}/>)}\r\n        </div>\r\n    )\r\n}\r\nexport default Users","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers, setCurrentPage, setTotalUsersCount, setUsers, toggleFollowingInProgress, toggleIsFetching, unfollow\r\n} from \"../../Redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsers\r\n} from \"../../Redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize)\r\n        /*вызываем thunk-creator из редьюсера, в котором объединена вся логика диспатчей и запросов на сервер, которые\r\n        должны выполняться вместе*/\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize)\r\n    }\r\n    onReducePagesList = () => {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage - 1, pageSize)\r\n    }\r\n    onIncreasePagesList = () => {\r\n        const {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage + 1, pageSize)\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount} pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage} onReducePagesList={this.onReducePagesList}\r\n                   onPageChanged={this.onPageChanged} onIncreasePagesList={this.onIncreasePagesList}\r\n                   users={this.props.users} unfollow={this.props.unfollow} follow={this.props.follow}\r\n                   toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                       followingInProgress={this.props.followingInProgress}/>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {\r\n        setUsers, setCurrentPage, setTotalUsersCount,\r\n        toggleIsFetching, toggleFollowingInProgress,\r\n        getUsers: requestUsers, follow, unfollow\r\n    })\r\n)(UsersContainer)","import React from 'react';\r\nimport style from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className = {style.header}>\r\n        <NavLink to='/feed'>\r\n            <img src = \"https://png.pngtree.com/element_our/sm/20180524/sm_5b072f1c21cb2.png\"/>\r\n            <div className={style.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login } - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </NavLink>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'samurai-network/auth/SET_AUTH_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null //if null then captcha is not required\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return ({\r\n                ...state,\r\n                ...action.payload\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\nconst getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}\r\n})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.authMe()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout} from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\nexport default connect(mapStateToProps, {logout\r\n    })(HeaderContainer);","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utilits/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../Common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n            <form onSubmit={handleSubmit} className={style.form}>\r\n                {createField('Email', 'email', Input, [required])}\r\n                {createField('Password', 'password', Input, [required], {type: 'password'})}\r\n                {createField(null, 'rememberMe', Input, null, {type: 'checkbox'}, 'remember me')}\r\n                {captchaUrl && <img src={captchaUrl}/>}\r\n                {captchaUrl && createField('symbols', 'captcha', Input, [required])}\r\n                {error && <div className={style.formSummaryError} > {error} </div>}\r\n                <div>\r\n                    <button>Sign in</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({ /*связываем LoginForm c redux-form*/\r\n    form: 'login' /*уникальное имя для формы, которую мы оборачиваем HOCom reduxForm*/\r\n})(LoginForm)\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => { /*в эту ф-ю приходят все данные из формы*/\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/> {/*необходимо для сабмита прокинуть в HOC onSubmit. в него придут\r\n            данные из формы, которую мы заполнили*/}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: state.auth.captchaUrl,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\nlet initialState = {\r\n    initialized: false\r\n}\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\nexport default appReducer","\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {\r\n            id: 1,\r\n            name: 'Misha',\r\n            avatar: \"https://thumbs.dreamstime.com/b/desenhos-animados-bonitos-da-cara-do-menino-110656357.jpg\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Valera',\r\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRBnXsITUj-e_i32TpFr0CQNW0YM9n4dbUHo7r00ynUKW15hBtF&s\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Egor',\r\n            avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRQF8Z879_maOZBlmNXL_guXrL8Muk8JAGj6ugglvkN70ppycF5&s\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({ //combineReducers объединяет reducerы вместе с их ветками стейта\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer //обязательно ключ должен быть назван form, потому что библиотека redux-form будет в стейте искать именно form\r\n});\r\n/*подключаем расширение redux devTools*/\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\nwindow._store_=store\r\nexport default store;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"../components/Common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <React.Suspense fallback={<Preloader/>}>\r\n                <Component {...props}/>\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}","import React, {Component, Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/NavBar/Navbar\";\r\nimport {HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport Feed from \"./components/Content/Feed/Feed\";\r\nimport Music from \"./components/Content/Music/Music\";\r\nimport Settings from \"./components/Content/Settings/Settings\";\r\nimport PropTypes from 'prop-types';\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./Redux/appReducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport store from \"./Redux/reduxStore\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n/*с помощью React.lazy загружаем некоторые компоненты не сразу, а только когда они будут необходимы*/\r\nconst ProfileContainer = React.lazy(() => import('./components/Content/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Content/Dialogs/DialogsContainer'));\r\n\r\nclass App extends Component {\r\n    catchAllUnhandledErrors = (promiseRejectionEvent) => {\r\n        alert('some error occured')\r\n    }\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className=\"app-wrapper-content\"> {/*создали данный класс, так как он общий для всего контента, и\r\n                вынесли его на более высокий уровень, чтоб не прописывать в css-модуле каждой компоненты контента отдельно*/}\r\n                    <Switch>\r\n                        <Route exact path={'/'} render={() => <Redirect from=\"/\" to=\"/profile\" />}/>\r\n                        <Route path='/dialogs' render={withSuspense(DialogsContainer)}/> {/*работа тэга route: когда встечает заданный путь,\r\n                        отрисовывает заданную компоненту. вместо метода component используем render, чтоб передать в компоненты пропсы*/}\r\n                        <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)}/> {/*с помощью :userId\r\n                        показываем, что в урле profile должен быть параметр userId, а с помощью ? - что этот параметр -\r\n                        опциональный и его может не быть(например для отрисовки своей страницы профиля)*/}\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/feed' render={() => <Feed/>}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n                        <Route path='/settings' render={() => <Settings/>}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n                        <Route path='*' render={() => <div>404 NOT FOUND</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\nlet AppContainer = compose(\r\n    connect(mapStateToProps, {initializeApp}),\r\n    withRouter\r\n)(App);\r\nconst SamuraiJSApp = (props) => {\r\n    return (\r\n        <HashRouter basename={process.env.PUBLIC_URL}> {/*необходим чтоб работал тэг route*/}\r\n            <Provider store={store}> {/*с помощью тега provider библиотеки react-redux создаем контекст и делаем store\r\n            доступным для всех компонент которые мы обернули этим тегом? тем самым не нужно передавать весь store через\r\n            пропсы вниз по дереву, а просто взять их из контекста в контейнерных компонентах*/}\r\n                <AppContainer/>\r\n            </Provider>\r\n        </HashRouter>\r\n    )\r\n}\r\nexport default SamuraiJSApp\r\nApp.propTypes = {\r\n    state: PropTypes.object\r\n}","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>, document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import style from \"./Preloader.module.css\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <img src={preloader} />\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2SoDU\",\"error\":\"FormsControls_error__2_FvN\",\"formSummaryError\":\"FormsControls_formSummaryError__Cokly\",\"form\":\"FormsControls_form__2IoPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SidebarFriends_title__196QT\",\"sidebarFriends\":\"SidebarFriends_sidebarFriends__1xbCZ\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required'\r\n}\r\nexport const maxLengthCreator = (maxLength) =>(value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"Friend_ava__2rKV8\",\"name\":\"Friend_name__3dfwI\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({ /*создаем образец axios, чтоб внести в него общие куски всех запросов на сервер*/\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true, /*необходим чтоб выполнять запросы авторизованно*/\r\n    headers: {\r\n        'API-KEY': 'f28b0cf7-313a-42c3-9df8-994bce274198'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    },\r\n    followUser (userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollowUser (userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status', {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData()\r\n        formData.append ('image', photoFile)\r\n        return instance.put('profile/photo', formData, {headers: {'Content-Type': 'multipart/form-data'}})\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put('profile', profile)\r\n    }\r\n}\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Paginator_pages__2gHud\",\"selectedPage\":\"Paginator_selectedPage__2LZKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1nYOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1y66w\",\"loginBlock\":\"Header_loginBlock__3fM-j\"};","import {profileAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'Терперье и труд все перетрут.', likesCount: 15},\r\n        {id: 2, message: 'Продам гараж. Пишите в лс.', likesCount: 12}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return ({\r\n                ...state,\r\n                postData: [...state.postData, newPost]\r\n            })\r\n        case SET_USER_PROFILE:\r\n            return ({\r\n                ...state,\r\n                profile: action.profile\r\n            })\r\n        case SET_STATUS:\r\n            return ({\r\n                ...state,\r\n                status: action.status\r\n            })\r\n        case DELETE_POST:\r\n            return ({\r\n                ...state,\r\n                postData: state.postData.filter(p => p.id != action.postId)\r\n            })\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return ({\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        let wrongNetwork = response.data.messages[0]\r\n            .slice(\r\n                response.data.messages[0].indexOf(\">\") + 1,\r\n                response.data.messages[0].indexOf(\")\")\r\n            )\r\n            .toLocaleLowerCase();\r\n        dispatch(\r\n            stopSubmit(\"edit-profile\", {\r\n                contacts: { [wrongNetwork]: response.data.messages[0] }\r\n            })\r\n        );\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\nexport default profileReducer;"],"sourceRoot":""}