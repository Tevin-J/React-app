{"version":3,"sources":["components/NavBar/Navbar.module.css","components/Content/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Content/Profile/MyPosts/MyPosts.module.css","components/Content/Profile/MyPosts/Post/Post.module.css","components/Content/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.jsx","components/NavBar/Navbar.jsx","components/Content/Profile/MyPosts/Post/Post.jsx","components/Content/Profile/MyPosts/MyPosts.jsx","components/Content/Profile/ProfileInfo/ProfileInfo.jsx","components/Content/Profile/Profile.jsx","components/Content/Dialogs/DialogItem/DialogItem.jsx","components/Content/Dialogs/Message/Message.jsx","components/Content/Dialogs/Dialogs.jsx","components/Content/Feed/Feed.jsx","components/Content/Music/Music.jsx","components/Content/Settings/Settings.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","style","header","to","src","Navbar","nav","item","activeClassName","activeLink","Post","post","message","likesCount","MyPosts","postsElements","id","map","myPosts","ProfileInfo","profileInfo","Profile","DialogItem","dialog","name","Message","Dialogs","dialogsElements","messagesElements","dialogs","dialogsItems","messagesItem","Feed","Music","Settings","App","basename","process","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.131821a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1-hSc\",\"item\":\"Navbar_item__1B1D7\",\"activeLink\":\"Navbar_activeLink__3cdmL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2BWSm\",\"dialogsItems\":\"Dialogs_dialogsItems__1PGE0\",\"dialog\":\"Dialogs_dialog__3btnD\",\"activeLink\":\"Dialogs_activeLink__303NL\",\"messagesItem\":\"Dialogs_messagesItem__1ZaJT\",\"message\":\"Dialogs_message__ljtbE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1y66w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3a84W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3oQRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__2bMjf\"};","import React from 'react';\r\nimport style from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className = {style.header}>\r\n        <NavLink to='/feed'>\r\n            <img src = \"https://png.pngtree.com/element_our/sm/20180524/sm_5b072f1c21cb2.png\"/>\r\n        </NavLink>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from \"./Navbar.module.css\"; /*модули css позволяют использовать в названии классов самые простые названия,\r\nреакт сам преобразует имена классов в уникальные*/\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}> {/*класс с основным атрибутом item по умолчанию сразу попадет в объект*/}\r\n                <NavLink to=\"/profile\" activeClassName={style.activeLink}>My profile</NavLink> {/*А дополнительный\r\n                атрибут activeLink только тогда, когда будет необходимо. Основной атрибут в className, а дополнительный\r\n                в activeClassName, так как className для этого объекта уже существует*/}\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink> {/*NavLink вместо <a>,\r\n                чтоб страница при переходе по ссылкам не перезагружалась, а просто отрисовывала необходимые компоненты.\r\n                Вместо href в NavLink используется атрибут to*/}\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/feed\" activeClassName={style.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/music\" activeClassName={style.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/settings\" activeClassName={style.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar; //чтоб в другом файле импортировать компоненту, мы должны ее экспортировать","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n    <div className={style.post}>\r\n        <img src='https://bibliojuris.com.br/wp-content/uploads/2018/06/myAvatar-1-300x300.png'/>\r\n        {props.message}\r\n        <div>\r\n            <span>\r\n                like\r\n                {props.likesCount}\r\n            </span>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\nconst MyPosts = () => {\r\n    let postData = [\r\n        {id:'1', message:'Privet!', likesCount: 15},\r\n        {id:'2', message: 'Kak dela?', likesCount: 12}\r\n    ];\r\n\r\n    let postsElements = postData.map(post => <Post message={post.message} likesCount={post.likesCount}/>)\r\n    return (\r\n        <div className={style.myPosts}>\r\n            <h3>My posts</h3>\r\n                <div>\r\n                    <textarea></textarea>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            {postsElements}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src = \"https://destinationreporterindia.com/wp-content/uploads/2019/09/International-Chiang-Mai-Colorful-hot-air-balloons-flying-over-mountain-at-Dot-Inthanon-in-Chiang-Mai.jpg\"/>\r\n                <div className={style.profileInfo}>\r\n                ava + description\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from \"./Profile.module.css\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPosts/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={style.activeLink}>{props.name}</NavLink> {/*с помощью\r\n            NavLink переключаемся по вкладкам без перезагрузки страницы*/}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport style from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsData = [\r\n        {id: '1', name: 'Misha'},\r\n        {id: '2', name: 'Valera'},\r\n        {id: '3', name: 'Egor'}\r\n    ];\r\n    let messageData = [\r\n        {id: '1', message: 'Hello!'},\r\n        {id: '2', message: 'How are you?'},\r\n        {id: '3', message: 'London is the capital of Great Britain'}\r\n    ];\r\n\r\n    let dialogsElements = dialogsData.map(dialog => <DialogItem id={dialog.id} name={dialog.name}/>);\r\n    let messagesElements = messageData.map(message => <Message message={message.message}/>);\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messagesItem}>\r\n                {messagesElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport styles from './Feed.module.css';\r\n\r\nconst Feed = (props) => {\r\n    return (\r\n      <div>\r\n          News feed\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport style from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            My playlist\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport styles from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/NavBar/Navbar\";\nimport Profile from \"./components/Content/Profile/Profile\";\nimport Dialogs from \"./components/Content/Dialogs/Dialogs\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Feed from \"./components/Content/Feed/Feed\";\nimport Music from \"./components/Content/Music/Music\";\nimport Settings from \"./components/Content/Settings/Settings\";\n\n\nconst App = () => {\n    return (\n        <HashRouter basename={process.env.PUBLIC_URL}> {/*необходим чтоб работал тэг route*/}\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className=\"app-wrapper-content\"> {/*создали данный класс, так как он общий для всего контента, и\n                вынесли его на более высокий уровень, чтоб не прописывать в css-модуле каждой компоненты контента отдельно*/}\n                    <Route path='/dialogs' component={Dialogs}/> {/*работа тэга route: когда встечает заданный путь,\n                    отрисовывает заданную компоненту*/}\n                    <Route path='/profile' component={Profile}/>\n                    <Route path='/feed' component={Feed}/>\n                    <Route path='/music' component={Music}/>\n                    <Route path='/settings' component={Settings}/>\n                </div>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}